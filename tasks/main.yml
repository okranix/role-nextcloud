---
# tasks file for nextcloud_podman_setup
- name: Get home directory of podman user
  ansible.builtin.getent:
    database: passwd
    key: "{{ podman_user }}"
  ignore_errors: "{{ ansible_check_mode }}"

- name: Set home directory var for deploy user
  ansible.builtin.set_fact:
    podman_user_home: "{{ getent_passwd[podman_user][4] }}"
  ignore_errors: "{{ ansible_check_mode }}"

- name: Set uid var for deploy user
  ansible.builtin.set_fact:
    podman_user_uid: "{{ getent_passwd[podman_user][1] }}"
  ignore_errors: "{{ ansible_check_mode }}"

- name: Create the nextcloud_network
  containers.podman.podman_network:
    name: nextcloud_network
  become: true
  become_user: "{{ podman_user }}"

- name: Ensure appdata directory for nextcloud HTML
  ansible.builtin.file:
    path: "{{ podman_user_home }}/nextcloud_container_data/appdata/html"
    state: directory
    owner: "{{ podman_user }}"
    group: "{{ podman_user }}"
    mode: "0750"
  become: true
  become_user: "{{ podman_user }}"

- name: Ensure appdata directory for nextcloud apps
  ansible.builtin.file:
    path: "{{ podman_user_home }}/nextcloud_container_data/appdata/app"
    state: directory
    owner: "{{ podman_user }}"
    group: "{{ podman_user }}"
    mode: "0750"
  become: true
  become_user: "{{ podman_user }}"

- name: Ensure appdata directory for nextcloud config
  ansible.builtin.file:
    path: "{{ podman_user_home }}/nextcloud_container_data/appdata/config"
    state: directory
    owner: "{{ podman_user }}"
    group: "{{ podman_user }}"
    mode: "0750"
  become: true
  become_user: "{{ podman_user }}"

- name: Ensure nextcloud data directory
  ansible.builtin.file:
    path: "{{ podman_user_home }}/nextcloud_container_data/data"
    state: directory
    owner: "{{ podman_user }}"
    group: "{{ podman_user }}"
    mode: "0750"
  become: true
  become_user: "{{ podman_user }}"

- name: Ensure MySQL directory for nextcloud
  ansible.builtin.file:
    path: "{{ podman_user_home }}/nextcloud_container_data/mysql"
    state: directory
    owner: "{{ podman_user }}"
    group: "{{ podman_user }}"
    mode: "0750"
  become: true
  become_user: "{{ podman_user }}"

- name: Create MariaDB container
  containers.podman.podman_container:
    debug: true
    conmon_pidfile: "/tmp/mariadb_conmon.pid"
    image: "{{ mariadb_image }}"
    image_strict: true
    recreate: false
    state: started
    name: "nextcloud_mariadb"
    user: "{{ podman_user_uid }}"
    userns: keep-id
    network:
      - nextcloud_network
    env:
      MYSQL_USER: "nextcloud"
      MYSQL_PASSWORD: "{{ mysql_password }}"
      MYSQL_ROOT_PASSWORD: "{{ mysql_root_password }}"
      MYSQL_DATABASE: "nextcloud_db"
    volume: "{{ podman_user_home }}/nextcloud_container_data/mysql:/var/lib/mysql:Z"
    generate_systemd:
      path: "{{ podman_user_home }}/.config/systemd/user"
      restart_policy: always
  ignore_errors: "{{ ansible_check_mode }}"
  become: true
  become_user: "{{ podman_user }}"

- name: Wait for DB to initilize
  ansible.builtin.wait_for:
    timeout: 20

- name: MariaDB container must be started and enabled on systemd
  ansible.builtin.systemd:
    name: container-nextcloud_mariadb
    scope: user
    daemon_reload: true
    state: started
    enabled: true
  environment:
    XDG_RUNTIME_DIR: "/run/user/{{ podman_user_uid }}"
  ignore_errors: "{{ ansible_check_mode }}"
  become: true
  become_user: "{{ podman_user }}"

- name: Create Nextcloud container
  containers.podman.podman_container:
    debug: false
    conmon_pidfile: "/tmp/nc_conmon.pid"
    image: "{{ nextcloud_image }}"
    image_strict: true
    recreate: false
    state: started
    name: "nextcloud"
    user: "{{ podman_user_uid }}"
    userns: keep-id
    network:
      - nextcloud_network
    env:
      MYSQL_DATABASE: "nextcloud_db"
      MYSQL_USER: "nextcloud"
      MYSQL_PASSWORD: "{{ mysql_password }}"
      MYSQL_HOST: "{{ mysql_host }}"
      NEXTCLOUD_ADMIN_USER: "nextcloudadm"
      NEXTCLOUD_ADMIN_PASSWORD: "{{ nextcloud_admin_password }}"
      NEXTCLOUD_TRUSTED_DOMAINS: "{{ nextcloud_trusted_domains }}"
      SMTP_HOST: "{{ smtp_host }}"
      SMTP_SECURE: "{{ smtp_secure }}"
      SMTP_PORT: "{{ smtp_port }}"
      SMTP_AUTHTYPE: "{{ smtp_authtype }}"
      SMTP_NAME: "{{ smtp_name }}"
      SMTP_PASSWORD: "{{ smtp_password }}"
      MAIL_FROM_ADDRESS: "{{ mail_from_address }}"
      MAIL_DOMAIN: "{{ mail_domain }}"
      OVERWRITEPROTOCOL: "{{ nextcloud_overwriteprotocol }}"
      OVERWRITECLIURL: "{{ nextcloud_overwritecliurl }}"
    volume:
      - "{{ podman_user_home }}/nextcloud_container_data/appdata/html:/var/www/html:Z"
      - "{{ podman_user_home }}/nextcloud_container_data/appdata/app:/var/www/html/custom_apps:Z"
      - "{{ podman_user_home }}/nextcloud_container_data/appdata/config:/var/www/html/config:Z"
      - "{{ podman_user_home }}/nextcloud_container_data/data:/var/www/html/data:Z"
    labels:
      traefik.http.routers.nextcloud.rule: Host(`{{ nextcloud_url }}`)"
    generate_systemd:
      path: "{{ podman_user_home }}/.config/systemd/user"
      restart_policy: always
      after:
        - container-nextcloud_mariadb.service
  ignore_errors: "{{ ansible_check_mode }}"
  become: true
  become_user: "{{ podman_user }}"

- name: Nextcloud container must be started and enabled on systemd
  ansible.builtin.systemd:
    name: container-nextcloud
    scope: user
    daemon_reload: true
    state: started
    enabled: true
  environment:
    XDG_RUNTIME_DIR: "/run/user/{{ podman_user_uid }}"
  ignore_errors: "{{ ansible_check_mode }}"
  become: true
  become_user: "{{ podman_user }}"

- name: Create the podman.socket file
  ansible.builtin.copy:
    src: podman.socket
    dest: /usr/lib/systemd/user/podman.socket
    mode: "0644"
    owner: root
    group: root
  ignore_errors: "{{ ansible_check_mode }}"
  become: true
  become_user: root

- name: Set DOCKER_HOST environment variable
  ansible.builtin.lineinfile:
    path: /etc/environment
    state: present
    line: "DOCKER_HOST=unix://run/user/{{ podman_user_uid }}/podman/podman.sock"
    owner: root
    group: root
    mode: "0644"
  ignore_errors: "{{ ansible_check_mode }}"
  become: true
  become_user: root

- name: Reset connection to load environment variable
  ansible.builtin.meta: reset_connection

- name: Setup traefik
  containers.podman.podman_container:
    name: traefik
    conmon_pidfile: "/tmp/traefik_conmon.pid"
    image: "{{ traefik_image }}"
    image_strict: true
    recreate: false
    state: started
    user: "{{ podman_user_uid }}"
    userns: keep-id
    network:
      - nextcloud_network
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volume:
      - "/run/user/{{ podman_user_uid }}/podman/podman.sock"
    command: --api.insecure=true --providers.docker
    labels:
      traefik.enable: "true"
      traefik.http.routers.traefik.rule: "Host(`{{ traefik_api_url }}`)"
    generate_systemd:
      path: "{{ podman_user_home }}/.config/systemd/user"
      restart_policy: always
  ignore_errors: "{{ ansible_check_mode }}"
  become: true
  become_user: "{{ podman_user }}"

- name: Traefik container must be started and enabled on systemd
  ansible.builtin.systemd:
    name: container-traefik
    scope: user
    daemon_reload: true
    state: started
    enabled: true
  environment:
    XDG_RUNTIME_DIR: "/run/user/{{ podman_user_uid }}"
  ignore_errors: "{{ ansible_check_mode }}"
  become: true
  become_user: "{{ podman_user }}"

- name: Open ports for traefik
  ansible.builtin.iptables:
    chain: INPUT
    protocol: tcp
    destination_ports:
      - "80"
      - "443"
      - "8080"
    jump: ACCEPT
  ignore_errors: "{{ ansible_check_mode }}"
  become: true
  become_user: root
